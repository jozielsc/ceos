# coding: utf-8
from sqlalchemy import BigInteger, Column, String
from sqlalchemy.schema import FetchedValue
from flask_sqlalchemy import SQLAlchemy


db = SQLAlchemy()


class TbPessoaFisica(db.Model):
    __tablename__ = 'tb_pessoa_fisica'

    id = db.Column(db.BigInteger, primary_key=True)
    cpf = db.Column(db.BigInteger, index=True)
    nome = db.Column(db.String(400))
    data_nascimento = db.Column(db.String(11))
    sexo = db.Column(db.String(10))
    nome_mae = db.Column(db.String(400))
    titulo_eleitor = db.Column(db.String(15))
    tipo_logradouro = db.Column(db.String(20))
    descr_logradouro = db.Column(db.String(150))
    num_logradouro = db.Column(db.String(10))
    descr_complemento_logradouro = db.Column(db.String(150))
    nome_bairro = db.Column(db.String(100))
    num_cep = db.Column(db.String(15))
    nome_municipio = db.Column(db.String(100))
    sigla_uf = db.Column(db.String(5))
    num_ddd = db.Column(db.String(4))
    num_telefone = db.Column(db.String(15))
    num_fax = db.Column(db.String(15))
    se_estrangeiro = db.Column(db.String(1))
    nacionalidade = db.Column(db.String(50))
    cod_situacao_cadastral = db.Column(db.String(1))
    descr_situacao_cadastral = db.Column(db.String(30))
    data_situacao_cadastral = db.Column(db.String(11))
    data_inscricao = db.Column(db.String(11))
    ano_obito = db.Column(db.String(10))
    ano_ultima_entrega_declaracao = db.Column(db.String(4))
    nome_pai = db.Column(db.String(400))
    identidade = db.Column(db.String(50))
    orgao_expeditor = db.Column(db.String(30))
    data_expedicao = db.Column(db.String(30))
    estado_civil = db.Column(db.String(30))
    nis_pis_pasep = db.Column(db.String(14))
    naturalidade = db.Column(db.String(100))
    num_ctps = db.Column(db.String(15))
    uf_ctps = db.Column(db.String(2))
    raca_cor = db.Column(db.String(30))
    grau_instrucao_escolaridade = db.Column(db.String(50))


class TbReceitaCnpj(db.Model):
    __tablename__ = 'tb_receita_cnpj'

    id = db.Column(db.BigInteger, primary_key=True)
    num_cnpj = db.Column(db.BigInteger, index=True)
    ind_matriz_filial = db.Column(db.String(1))
    nome = db.Column(db.String(400))
    nome_fantasia = db.Column(db.String(100))
    tipo_logradouro = db.Column(db.String(20))
    descr_logradouro = db.Column(db.String(100))
    num_logradouro = db.Column(db.String(6))
    descr_complemento_logradouro = db.Column(db.String(200))
    nome_bairro = db.Column(db.String(100))
    num_cep = db.Column(db.String(8))
    cod_municipio = db.Column(db.String(4))
    nome_municipio = db.Column(db.String(50))
    sigla_uf = db.Column(db.String(2))
    num_ddd1 = db.Column(db.String(4))
    num_telefone1 = db.Column(db.String(9))
    num_ddd2 = db.Column(db.String(4))
    num_telefone2 = db.Column(db.String(9))
    num_ddd_fax = db.Column(db.String(4))
    num_fax = db.Column(db.String(9))
    nome_cidade_exterior = db.Column(db.String(100))
    nome_pais = db.Column(db.String(50))
    descr_email = db.Column(db.String(200))
    se_tem_socio = db.Column(db.String(1))
    situacao_cadastral_cnpj = db.Column(db.String(50))
    data_situacao_cadastral = db.Column(db.String(10))
    motivo_situacao_cadastral = db.Column(db.String(50))
    natureza_juridica = db.Column(db.String(100))
    atividade_econ_principal = db.Column(db.String(200))
    data_abertura_estabelecimento = db.Column(db.String(10))
    data_inclusao_simples = db.Column(db.String(10))
    data_exclusao_simples = db.Column(db.String(10))
    porte_empresa = db.Column(db.String(30))
    qualificacao_tributaria = db.Column(db.String(30))
    num_nire = db.Column(db.String(11))
    num_cpf_responsavel = db.Column(db.String(11))
    nome_responsavel = db.Column(db.String(100))
    qualificacao_responsavel = db.Column(db.String(50))
    ind_tipo_operacao_sucedida = db.Column(db.String(1))
    num_cnpj_sucedida = db.Column(db.String(14))
    data_evento_sucedida = db.Column(db.String(10))
    ind_tipo_operacao_sucessora = db.Column(db.String(1))
    data_evento_sucessora = db.Column(db.String(10))
    num_cnpj_sucessora = db.Column(db.String(14))
    valor_capital_social = db.Column(db.String(12))
    orgao_aduaneiro = db.Column(db.String(40))


class TbReceitaContador(db.Model):
    __tablename__ = 'tb_receita_contador'

    id = db.Column(db.BigInteger, primary_key=True)
    num_cnpj_empresa = db.Column(db.BigInteger, index=True)
    ind_tipo = db.Column(db.String(10))
    cpf_cnpj_contador = db.Column(db.BigInteger, index=True)
    nome = db.Column(db.String(400))
    ind_matriz_filial = db.Column(db.String(100))
    logradouro = db.Column(db.String(100))
    numero = db.Column(db.String(10))
    complemento = db.Column(db.String(200))
    bairro = db.Column(db.String(100))
    municipio = db.Column(db.String(100))
    estado = db.Column(db.String(100))
    cep = db.Column(db.String(100))
    ddd = db.Column(db.String(100))
    telefone = db.Column(db.String(100))
    descr_email = db.Column(db.String(100))
    num_registro_crc = db.Column(db.String(100))
    sigla_uf_crc = db.Column(db.String(5))


class TbReceitaSocio(db.Model):
    __tablename__ = 'tb_receita_socios'

    id = db.Column(db.BigInteger, primary_key=True)
    num_cnpj_empresa = db.Column(db.BigInteger, index=True)
    ind_tipo = db.Column(db.String(2))
    cpf_cnpj_socio = db.Column(db.BigInteger, index=True)
    nome = db.Column(db.String(400))
    nome_pais = db.Column(db.String(50))
    logradouro = db.Column(db.String(100))
    numero = db.Column(db.String(6))
    complemento = db.Column(db.String(200))
    bairro = db.Column(db.String(50))
    cep = db.Column(db.String(8))
    municipio = db.Column(db.String(100))
    estado = db.Column(db.String(2))
    ddd = db.Column(db.String(4))
    telefone = db.Column(db.String(15))
    descr_email = db.Column(db.String(100))
    data_entrada_sociedade = db.Column(db.String(10))
    data_de_exclusao_na_sociedade = db.Column(db.String(10))
    valor_percentua_capital_social = db.Column(db.String(4))
    qualificacao_socio = db.Column(db.String(200))
    num_cpf_representante_legal = db.Column(db.String(15))
    nome_representante_legal = db.Column(db.String(150))
    qualificacao_represe_legal = db.Column(db.String(120))


class TbVinculoFamiliar(db.Model):
    __tablename__ = 'tb_vinculo_familiar'

    id = db.Column(db.BigInteger, primary_key=True)
    cpf1 = db.Column(db.BigInteger, index=True)
    pessoa_fisica1 = db.Column(db.BigInteger)
    relacao = db.Column(db.String(30))
    cpf2 = db.Column(db.BigInteger, index=True)
    pessoa_fisica2 = db.Column(db.BigInteger)
    fonte = db.Column(db.String(80))
    tipo = db.Column(db.String(10))
